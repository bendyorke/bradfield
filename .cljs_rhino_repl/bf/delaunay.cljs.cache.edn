{:name bf.delaunay, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {draw-line! {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 53, :column 7, :end-line 53, :end-column 17, :arglists (quote ([ctx [p1 p2]]))}, :name bf.delaunay/draw-line!, :variadic false, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :end-column 17, :method-params ([ctx p__30144]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx [p1 p2]]))}, triangulate {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 30, :column 7, :end-line 30, :end-column 18, :arglists (quote ([points]))}, :name bf.delaunay/triangulate, :variadic false, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :end-column 18, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, draw-points! {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 50, :column 7, :end-line 50, :end-column 19, :arglists (quote ([ctx points]))}, :name bf.delaunay/draw-points!, :variadic false, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :end-column 19, :method-params ([ctx points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx points]))}, draw-point! {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 46, :column 7, :end-line 46, :end-column 18, :arglists (quote ([ctx p]))}, :name bf.delaunay/draw-point!, :variadic false, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :end-column 18, :method-params ([ctx p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx p]))}, get-ctx {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 39, :column 7, :end-line 39, :end-column 14, :arglists (quote ([]))}, :name bf.delaunay/get-ctx, :variadic false, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, realize-point {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 42, :column 7, :end-line 42, :end-column 20, :arglists (quote ([[x y]]))}, :name bf.delaunay/realize-point, :variadic false, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :end-column 20, :method-params ([p__30131]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]]))}, +super+ {:name bf.delaunay/+super+, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 17, :column 1, :end-line 17, :end-column 13, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 17, :column 6, :end-line 17, :end-column 13}}, on-jsload {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 67, :column 7, :end-line 67, :end-column 16, :arglists (quote ([]))}, :name bf.delaunay/on-jsload, :variadic false, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, find-edges {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 23, :column 7, :end-line 23, :end-column 17, :arglists (quote ([vs]))}, :name bf.delaunay/find-edges, :variadic false, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :end-column 17, :method-params ([vs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vs]))}, lines {:name bf.delaunay/lines, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 9, :column 1, :end-line 9, :end-column 11, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 9, :column 6, :end-line 9, :end-column 11}}, points {:name bf.delaunay/points, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 7, :column 1, :end-line 7, :end-column 12, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 7, :column 6, :end-line 7, :end-column 12}}, clear! {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 64, :column 7, :end-line 64, :end-column 13, :arglists (quote ([ctx]))}, :name bf.delaunay/clear!, :variadic false, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :end-column 13, :method-params ([ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ctx]))}, canvas {:name bf.delaunay/canvas, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 5, :column 1, :end-line 5, :end-column 12, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 5, :column 6, :end-line 5, :end-column 12}}, draw-lines! {:protocol-inline nil, :meta {:file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :line 61, :column 7, :end-line 61, :end-column 18, :arglists (quote ([ctx lines]))}, :name bf.delaunay/draw-lines!, :variadic false, :file "/Users/bendyorke/Code/bradfield/src/bf/delaunay.cljs", :end-column 18, :method-params ([ctx lines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx lines]))}}}